#coding=utf-8
#import libs 
import sys
import yujianpyme_cmd
import yujianpyme_sty
import Fun
import EXUIControl
EXUIControl.G_ExeDir = Fun.G_ExeDir
EXUIControl.G_ResDir = Fun.G_ResDir
import os
import tkinter
from   tkinter import *
import tkinter.ttk
import tkinter.font
from   PIL import Image,ImageTk

#Add your Varial Here: (Keep This Line of comments)
#Define UI Class
class  yujianpyme:
    def __init__(self,root,isTKroot = True):
        uiName = Fun.GetUIName(self.__class__.__name__)
        self.uiName = uiName
        Fun.Register(uiName,'UIClass',self)
        self.root = root
        self.isTKroot = isTKroot
        Fun.G_UICommandDictionary[uiName]=yujianpyme_cmd
        Fun.Register(uiName,'root',root)
        style = yujianpyme_sty.SetupStyle()
        if isTKroot == True:
            root.title("仿御剑开发pyme")
            Fun.WindowDraggable(root,False,0,'#00ffff')
            if os.path.exists("Resources/ICO_Photo.png"):
                root.iconphoto(False, ImageTk.PhotoImage(file="Resources/ICO_Photo.png"))
            Fun.CenterDlg(uiName,root,939,583)
            root['background'] = '#F3F3F3'
        root.bind('<Configure>',self.Configure)
        Form_1= tkinter.Canvas(root,width = 10,height = 4)
        Form_1.pack(side=tkinter.TOP,fill=tkinter.BOTH,expand=True)
        Form_1.configure(width = 939)
        Form_1.configure(height = 583)
        Form_1.configure(bg = "#F3F3F3")
        Form_1.configure(highlightthickness = 0)
        Fun.Register(uiName,'Form_1',Form_1)
        Fun.G_RootSize=[939,583]
        Group_1_Variable = Fun.AddTKVariable(uiName,'Group_1')
        Group_1_Variable.set(0)
        Group_2_Variable = Fun.AddTKVariable(uiName,'Group_2')
        Group_2_Variable.set(0)
        Group_3_Variable = Fun.AddTKVariable(uiName,'Group_3')
        Group_3_Variable.set(0)
        Group_4_Variable = Fun.AddTKVariable(uiName,'Group_4')
        Group_4_Variable.set(1)
        Group_5_Variable = Fun.AddTKVariable(uiName,'Group_5')
        Group_5_Variable.set(1)
        Group_6_Variable = Fun.AddTKVariable(uiName,'Group_6')
        Group_6_Variable.set(1)
        Group_7_Variable = Fun.AddTKVariable(uiName,'Group_7')
        Group_7_Variable.set(1)
        Group_8_Variable = Fun.AddTKVariable(uiName,'Group_8')
        Group_8_Variable.set(1)
        Group_9_Variable = Fun.AddTKVariable(uiName,'Group_9')
        Group_9_Variable.set(1)
        #Create the elements of root 
        Label_21 = tkinter.Label(Form_1,text="")
        Fun.Register(uiName,'Label_21',Label_21,'Label_8')
        Fun.SetControlPlace(uiName,'Label_21',13,20,901,136)
        Label_21.configure(bg = "#F3F3F3")
        Label_21.configure(fg = "SystemButtonText")
        Label_21.configure(relief = "solid")
        Label_21.lower()
        Label_22 = tkinter.Label(Form_1,text="域名:")
        Fun.Register(uiName,'Label_22',Label_22,'Label_9')
        Fun.SetControlPlace(uiName,'Label_22',32,32,50,28)
        Label_22.configure(bg = "#F3F3F3")
        Label_22.configure(fg = "SystemButtonText")
        Label_22.configure(relief = "flat")
        Label_22.lift()
        Label_23 = tkinter.Label(Form_1,text="线程:")
        Fun.Register(uiName,'Label_23',Label_23,'Label_10')
        Fun.SetControlPlace(uiName,'Label_23',32,74,50,28)
        Label_23.configure(bg = "#F3F3F3")
        Label_23.configure(fg = "SystemButtonText")
        Label_23.configure(relief = "flat")
        Label_23.lift()
        Label_24 = tkinter.Label(Form_1,text="超时:")
        Fun.Register(uiName,'Label_24',Label_24,'Label_11')
        Fun.SetControlPlace(uiName,'Label_24',32,112,50,28)
        Label_24.configure(bg = "#F3F3F3")
        Label_24.configure(fg = "SystemButtonText")
        Label_24.configure(relief = "flat")
        Label_24.lift()
        Label_30 = tkinter.Label(Form_1,text="（条   CPU核心  *  5最佳）")
        Fun.Register(uiName,'Label_30',Label_30,'Label_12')
        Fun.SetControlPlace(uiName,'Label_30',169,74,200,28)
        Label_30.configure(bg = "#F3F3F3")
        Label_30.configure(fg = "SystemButtonText")
        Label_30.configure(anchor = "w")
        Label_30.configure(relief = "flat")
        Label_30.lift()
        Label_31 = tkinter.Label(Form_1,text="（秒   超时的页面被丢弃）")
        Fun.Register(uiName,'Label_31',Label_31,'Label_13')
        Fun.SetControlPlace(uiName,'Label_31',169,112,200,28)
        Label_31.configure(bg = "#F3F3F3")
        Label_31.configure(fg = "SystemButtonText")
        Label_31.configure(anchor = "w")
        Label_31.configure(relief = "flat")
        Label_42 = tkinter.Label(Form_1,text="扫描信息:准备就绪")
        Fun.Register(uiName,'Label_42',Label_42,'Label_14')
        Fun.SetControlPlace(uiName,'Label_42',13,160,600,20)
        Label_42.configure(bg = "#EFEFEF")
        Label_42.configure(fg = "SystemButtonText")
        Label_42.configure(anchor = "w")
        Label_42.configure(relief = "flat")
        Entry_25= EXUIControl.CustomEntry(Form_1)
        Fun.Register(uiName,'Entry_25',Entry_25,'Entry_2')
        Entry_25.SetBGColor("#FFFFFF")
        Entry_25.SetFGColor("#000000")
        Entry_25.SetTipFGColor("#888888")
        Entry_25.SetRelief("sunken")
        Fun.SetControlPlace(uiName,'Entry_25',82,27,620,38)
        Button_26 = tkinter.Button(Form_1,text="开始扫描")
        Fun.Register(uiName,'Button_26',Button_26,'Button_3')
        Fun.SetControlPlace(uiName,'Button_26',711,27,80,38)
        Button_26.configure(bg = "#EFEFEF")
        Button_26.configure(command=lambda:yujianpyme_cmd.Button_3_onCommand(uiName,"Button_3"))
        Button_26.lift()
        Button_27 = tkinter.Button(Form_1,text="停止扫描")
        Fun.Register(uiName,'Button_27',Button_27,'Button_4')
        Fun.SetControlPlace(uiName,'Button_27',811,27,80,38)
        Button_27.configure(bg = "#EFEFEF")
        Button_27.configure(state = "disabled")
        ComboBox_28_Variable = Fun.AddTKVariable(uiName,'ComboBox_28')
        ComboBox_28 = tkinter.ttk.Combobox(Form_1,textvariable=ComboBox_28_Variable, state="readonly")
        Fun.Register(uiName,'ComboBox_28',ComboBox_28,'ComboBox_3')
        Fun.SetControlPlace(uiName,'ComboBox_28',82,74,87,28)
        ComboBox_28.lift()
        ComboBox_29_Variable = Fun.AddTKVariable(uiName,'ComboBox_29')
        ComboBox_29 = tkinter.ttk.Combobox(Form_1,textvariable=ComboBox_29_Variable, state="readonly")
        Fun.Register(uiName,'ComboBox_29',ComboBox_29,'ComboBox_4')
        Fun.SetControlPlace(uiName,'ComboBox_29',82,112,87,28)
        CheckButton_46_Variable = Fun.AddTKVariable(uiName,'CheckButton_46')
        CheckButton_46_Variable.set(False)
        CheckButton_46 = tkinter.Checkbutton(Form_1,variable=CheckButton_46_Variable,text="DIR",anchor=tkinter.W)
        Fun.Register(uiName,'CheckButton_46',CheckButton_46,'is_dir')
        Fun.SetControlPlace(uiName,'CheckButton_46',403,71,100,20)
        CheckButton_46.configure(bg = "#F3F3F3")
        CheckButton_46.configure(activebackground = "#F3F3F3")
        CheckButton_46.configure(selectcolor = "#F3F3F3")
        CheckButton_46.configure(command=lambda:yujianpyme_cmd.is_dir_onCommand(uiName,"is_dir"))
        CheckButton_46_Ft=tkinter.font.Font(family='Microsoft YaHei UI', size=9,weight='normal',slant='roman',underline=0,overstrike=0)
        CheckButton_46.configure(font = CheckButton_46_Ft)
        CheckButton_48_Variable = Fun.AddTKVariable(uiName,'CheckButton_48')
        CheckButton_48_Variable.set(False)
        CheckButton_48 = tkinter.Checkbutton(Form_1,variable=CheckButton_48_Variable,text="ASP",anchor=tkinter.W)
        Fun.Register(uiName,'CheckButton_48',CheckButton_48,'is_asp')
        Fun.SetControlPlace(uiName,'CheckButton_48',403,102,100,20)
        CheckButton_48.configure(bg = "#F3F3F3")
        CheckButton_48.configure(activebackground = "#F3F3F3")
        CheckButton_48.configure(selectcolor = "#F3F3F3")
        CheckButton_48_Ft=tkinter.font.Font(family='Microsoft YaHei UI', size=9,weight='normal',slant='roman',underline=0,overstrike=0)
        CheckButton_48.configure(font = CheckButton_48_Ft)
        CheckButton_49_Variable = Fun.AddTKVariable(uiName,'CheckButton_49')
        CheckButton_49_Variable.set(False)
        CheckButton_49 = tkinter.Checkbutton(Form_1,variable=CheckButton_49_Variable,text="MDB",anchor=tkinter.W)
        Fun.Register(uiName,'CheckButton_49',CheckButton_49,'is_mdb')
        Fun.SetControlPlace(uiName,'CheckButton_49',403,131,100,20)
        CheckButton_49.configure(bg = "#F3F3F3")
        CheckButton_49.configure(activebackground = "#F3F3F3")
        CheckButton_49.configure(selectcolor = "#F3F3F3")
        CheckButton_49_Ft=tkinter.font.Font(family='Microsoft YaHei UI', size=9,weight='normal',slant='roman',underline=0,overstrike=0)
        CheckButton_49.configure(font = CheckButton_49_Ft)
        CheckButton_50_Variable = Fun.AddTKVariable(uiName,'CheckButton_50')
        CheckButton_50_Variable.set(False)
        CheckButton_50 = tkinter.Checkbutton(Form_1,variable=CheckButton_50_Variable,text="PHP",anchor=tkinter.W)
        Fun.Register(uiName,'CheckButton_50',CheckButton_50,'is_php')
        Fun.SetControlPlace(uiName,'CheckButton_50',515,71,100,20)
        CheckButton_50.configure(bg = "#F3F3F3")
        CheckButton_50.configure(activebackground = "#F3F3F3")
        CheckButton_50.configure(selectcolor = "#F3F3F3")
        CheckButton_50_Ft=tkinter.font.Font(family='Microsoft YaHei UI', size=9,weight='normal',slant='roman',underline=0,overstrike=0)
        CheckButton_50.configure(font = CheckButton_50_Ft)
        CheckButton_51_Variable = Fun.AddTKVariable(uiName,'CheckButton_51')
        CheckButton_51_Variable.set(False)
        CheckButton_51 = tkinter.Checkbutton(Form_1,variable=CheckButton_51_Variable,text="ASPX",anchor=tkinter.W)
        Fun.Register(uiName,'CheckButton_51',CheckButton_51,'is_aspx')
        Fun.SetControlPlace(uiName,'CheckButton_51',515,102,100,20)
        CheckButton_51.configure(bg = "#F3F3F3")
        CheckButton_51.configure(activebackground = "#F3F3F3")
        CheckButton_51.configure(selectcolor = "#F3F3F3")
        CheckButton_51_Ft=tkinter.font.Font(family='Microsoft YaHei UI', size=9,weight='normal',slant='roman',underline=0,overstrike=0)
        CheckButton_51.configure(font = CheckButton_51_Ft)
        CheckButton_52_Variable = Fun.AddTKVariable(uiName,'CheckButton_52')
        CheckButton_52_Variable.set(False)
        CheckButton_52 = tkinter.Checkbutton(Form_1,variable=CheckButton_52_Variable,text="JSP",anchor=tkinter.W)
        Fun.Register(uiName,'CheckButton_52',CheckButton_52,'is_jsp')
        Fun.SetControlPlace(uiName,'CheckButton_52',515,131,100,20)
        CheckButton_52.configure(bg = "#F3F3F3")
        CheckButton_52.configure(activebackground = "#F3F3F3")
        CheckButton_52.configure(selectcolor = "#F3F3F3")
        CheckButton_52_Ft=tkinter.font.Font(family='Microsoft YaHei UI', size=9,weight='normal',slant='roman',underline=0,overstrike=0)
        CheckButton_52.configure(font = CheckButton_52_Ft)
        CheckButton_53_Variable = Fun.AddTKVariable(uiName,'CheckButton_53')
        CheckButton_53_Variable.set(True)
        CheckButton_53 = tkinter.Checkbutton(Form_1,variable=CheckButton_53_Variable,text="检测200",anchor=tkinter.W)
        Fun.Register(uiName,'CheckButton_53',CheckButton_53,'is_200code')
        Fun.SetControlPlace(uiName,'CheckButton_53',708,71,100,20)
        CheckButton_53.configure(bg = "#F3F3F3")
        CheckButton_53.configure(activebackground = "#F3F3F3")
        CheckButton_53.configure(selectcolor = "#F3F3F3")
        CheckButton_54_Variable = Fun.AddTKVariable(uiName,'CheckButton_54')
        CheckButton_54_Variable.set(False)
        CheckButton_54 = tkinter.Checkbutton(Form_1,variable=CheckButton_54_Variable,text="检测3xx",anchor=tkinter.W)
        Fun.Register(uiName,'CheckButton_54',CheckButton_54,'is_3xxcode')
        Fun.SetControlPlace(uiName,'CheckButton_54',708,131,100,20)
        CheckButton_54.configure(bg = "#F3F3F3")
        CheckButton_54.configure(activebackground = "#F3F3F3")
        CheckButton_54.configure(selectcolor = "#F3F3F3")
        CheckButton_55_Variable = Fun.AddTKVariable(uiName,'CheckButton_55')
        CheckButton_55_Variable.set(False)
        CheckButton_55 = tkinter.Checkbutton(Form_1,variable=CheckButton_55_Variable,text="检测403",anchor=tkinter.W)
        Fun.Register(uiName,'CheckButton_55',CheckButton_55,'is_403code')
        Fun.SetControlPlace(uiName,'CheckButton_55',708,102,100,20)
        CheckButton_55.configure(bg = "#F3F3F3")
        CheckButton_55.configure(activebackground = "#F3F3F3")
        CheckButton_55.configure(selectcolor = "#F3F3F3")
        ListView_57 = tkinter.ttk.Treeview(Form_1,show="headings")
        Fun.Register(uiName,'ListView_57',ListView_57,'ListView_1')
        Fun.SetControlPlace(uiName,'ListView_57',13,185,901,334)
        ListView_57.configure(selectmode = "extended")
        ListView_57.configure(columns = ["ID","地址","状态"])
        ListView_57.column("ID",anchor="center",width=150,stretch=True)
        ListView_57.heading("ID",anchor="center",text="ID")
        ListView_57.column("地址",anchor="center",width=400,stretch=True)
        ListView_57.heading("地址",anchor="center",text="地址")
        ListView_57.column("状态",anchor="center",width=350,stretch=True)
        ListView_57.heading("状态",anchor="center",text="状态")
        ListView_57_VScrollbar = tkinter.ttk.Scrollbar(ListView_57,orient=tkinter.VERTICAL)
        ListView_57_VScrollbar.place(x = 881,y = 0,width = 20,height = 334)
        ListView_57_VScrollbar.config(command = ListView_57.yview)
        ListView_57.config(yscrollcommand = ListView_57_VScrollbar.set)
        Fun.Register(uiName,'ListView_57_VScrollbar',ListView_57_VScrollbar)
        Progress_58 = tkinter.ttk.Progressbar(Form_1)
        Fun.Register(uiName,'Progress_58',Progress_58,'Progress_1')
        Fun.SetControlPlace(uiName,'Progress_58',13,537,901,35)
        Progress_58.configure(orient = tkinter.HORIZONTAL)
        Progress_58.configure(mode = "determinate")
        Progress_58.configure(maximum = "100")
        Progress_58.configure(value = "0")
        #Inital all element's Data 
        Fun.InitElementData(uiName)
        #Call Form_1's OnLoad Function
        yujianpyme_cmd.Form_1_onLoad(uiName)
        #Add Some Logic Code Here: (Keep This Line of comments)



        #Exit Application: (Keep This Line of comments)
        if self.isTKroot == True and Fun.GetElement(self.uiName,"root"):
            self.root.protocol('WM_DELETE_WINDOW', self.Exit)
            self.root.bind('<Escape>',self.Escape)  
    def GetRootSize(self):
        return Fun.G_RootSize[0],Fun.G_RootSize[1]
    def GetAllElement(self):
        return Fun.G_UIElementDictionary[self.uiName]
    def Escape(self,event):
        if Fun.AskBox('提示','确定退出程序？') == True:
            self.Exit()
    def Exit(self):
        if self.isTKroot == True:
            Fun.DestroyUI(self.uiName)

    def Configure(self,event):
        Form_1 = Fun.GetElement(self.uiName,'Form_1')
        if Form_1 == event.widget:
            Fun.UpdateElementPlace(self.uiName,event.width,event.height)
            Fun.ReDrawCanvasRecord(self.uiName)
        if self.root == event.widget:
            Fun.ResizeRoot(self.uiName,self.root,event)
            Fun.ResizeAllChart(self.uiName)
            uiName = self.uiName
            pass
#Create the root of Kinter 
if  __name__ == '__main__':
    root = tkinter.Tk()
    MyDlg = yujianpyme(root)
    root.mainloop()
